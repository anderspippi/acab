name: "Pull Request"
on:
  pull_request:
    branches:
      - main
env:
  "IMAGE": "ghcr.io/${{ github.repository }}:${{ github.sha }}"
jobs:
  "build":
    name: "build"
    runs-on: "ubuntu-latest"
    outputs:
      image: ${{ env.IMAGE }}
    permissions:
      contents: "write"
      id-token: "write"
      packages: "write"
    env:
      NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-node@v3"
        with:
          node-version: "18"
          registry-url: "https://npm.pkg.github.com"
          cache: "yarn"
      - name: "Cache client node_modules"
        id: "cache-node-modules"
        uses: "actions/cache@v3"
        with:
          path: "node_modules"
          key: "${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}"
      - name: "Cache server node_modules"
        id: "cache-server-node-modules"
        uses: "actions/cache@v3"
        with:
          path: "server/node_modules"
          key: "${{ runner.os }}-modules-${{ hashFiles('server/yarn.lock') }}"
      - name: "install dependencies Yarn"
        if: "steps.cache-node-modules.outputs.cache-hit != 'true'"
        run: "yarn install --frozen-lockfile"
      - name: "install server dependencies Yarn"
        if: "steps.cache-server-node-modules.outputs.cache-hit != 'true'"
        run: "yarn install --frozen-lockfile"
        working-directory: "server"
      - name: "server tests"
        run: "yarn test"
        working-directory: "server"
      - name: "client tests"
        run: "yarn test"
      - name: "Bygg klient(yarn run build)"
        run: "yarn run build"
      - name: "Bygg server(yarn run build)"
        run: "yarn run build"
        working-directory: "server"
      - name: "Set up Docker Buildx"
        id: "buildx"
        uses: "docker/setup-buildx-action@v2"
      - name: "Login to GitHub Docker Registry"
        uses: "docker/login-action@v2"
        with:
          "registry": "ghcr.io"
          "username": "${{ github.actor }}"
          "password": "${{ secrets.GITHUB_TOKEN }}"
      - name: "Build and push Docker"
        uses: "docker/build-push-action@v4"
        with:
          context: .
          file: Dockerfile
          tags: "${{ env.IMAGE }}"
          push: "true"
          cache-from: "type=gha"
          cache-to: "type=gha,mode=max"
  "functionalTests":
    name: "Functional tests"
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: "build"
    services:
      kelvin:
        image: ${{needs.build.outputs.image}}
        ports:
          - 3000:3000
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://npm.pkg.github.com"
          cache: "yarn"
      - name: Install dependencies
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Install Playwright Chromium browser
        run: npx playwright install --with-deps chromium
      - name: Run Playwright tests
        run: yarn playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
